{
  "version": "2.0.0",
  "inputs": [
    {
      "id": "EditorActionIndentationToSpaces",
      "type": "command",
      "command": "editor.action.indentationToSpaces"
    },
    {
      "id": "EditorActionIndentUsingSpaces",
      "type": "command",
      "command": "editor.action.indentUsingSpaces"
    },
    {
      "id": "EditorActionFormatDocument",
      "type": "command",
      "command": "editor.action.formatDocument"
    },
    {
      "id": "TargetEncoding",
      "type": "promptString",
      "description": "target encoding",
      "default": "utf8"
    },
    {
      "id": "SourceEncoding",
      "type": "promptString",
      "description": "source encoding",
      "default": "big5"
    },
    {
      "id": "TimeFormat",
      "type": "promptString",
      "description": "TimeFormat e.g. yyyyMMddHHmmssffff",
      "default": "yyyyMMddHHmm"
    },
    {
      "id": "VersionNumber",
      "type": "promptString",
      "description": "VersionNumber",
      "default": "0000"
    },
    {
      "id": "Status",
      "type": "promptString",
      "description": "Status",
      "default": "NULL"
    },
    {
      "id": "Description",
      "type": "promptString",
      "description": "Description",
      "default": "Description"
    },
    {
      "id": "Split",
      "type": "promptString",
      "description": "Split",
      "default": "_"
    },
    {
      "id": "InputFile",
      "type": "promptString",
      "description": "./*.txt",
      "default": "./input.txt"
    },
    {
      "id": "NodejsPackageManager",
      "type": "pickString",
      "description": "Node.js Package Manager",
      "options": [
        "npm",
        "pnpm",
        "yarn"
      ],
      "default": "npm"
    },
    {
      "id": "NodejsPackageManagerScript",
      "type": "promptString",
      "description": "Node.js Package Manager 's script",
      "default": "start"
    },
    {
      "id": "NodejsModuleName",
      "type": "promptString",
      "description": "Node.js Module Name",
      "default": ""
    }
  ],
  "tasks": [
    {
      "label": "Start File",
      "type": "shell",
      "options": {"cwd": "${fileDirname}"},
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "&","D:\\Studio\\Programming\\Project\\Script\\Task\\Task-Infomation.ps1","Open File","Open the file using your computer`s default software.",";",
        "&","D:\\Studio\\Programming\\Project\\Script\\Task\\File-Open.ps1","'${file}'",";"
      ]
    },
    {
      "label": "Start Anaconda-PowerShell",
      "type": "shell",
      "options": {"cwd": "${fileDirname}"},
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "&","D:\\Studio\\Programming\\Project\\Script\\Task\\Task-Infomation.ps1","Open File","Open the file using your computer`s default software.",";",
        "&","D:\\Studio\\Programming\\Project\\Script\\Task\\Start-Anaconda-PowerShell.ps1",";"
      ]
    },
    {
      "label": "Start VisualStudioCode-FolderDirectory",
      "type": "shell",
      "options": {"cwd": "${fileDirname}"},
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        // "D:\\Studio\\Programming\\Project\\Script\\Task\\Task-Infomation.ps1.ps1",";",
        "Write-Host","Start VisualStudioCode-FolderDirectory",";",
        "Write-Host","  Time:","$(Get-Date","-Format","'yyyy/MM/dd(K)HH:mm:ss.ffff')",";",
        "Write-Host","  VisualStudioCode-FolderDirectory: ${fileDirname}",";",
        "code","."
      ]
    },
    {
      "label": "Start VisualStudioCode-WorkSpace",
      "type": "shell",
      "options": {"cwd": "${fileDirname}"},
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","Start VisualStudioCode-WorkSpace",";",
        "Write-Host","  Time:","$(Get-Date","-Format","'yyyy/MM/dd(K)HH:mm:ss.ffff')",";",
        "Write-Host","  VisualStudioCode-WorkSpace: $((Get-ChildItem *.code-workspace).ToString())\n",";",
        "pwsh","-Command","\"$((Get-ChildItem *.code-workspace).ToString())\""
      ]
    },
    {
      "label": "Start VisualStudio-Project",
      "type": "shell",
      "options": {"cwd": "${fileDirname}\\.."},
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","Start VisualStudio-Project",";",
        "Write-Host","  Time:","$(Get-Date","-Format","'yyyy/MM/dd(K)HH:mm:ss.ffff')",";",
        "Write-Host","  VisualStudio-Project: $((Get-ChildItem *.sln).ToString())\n",";",
        "pwsh","-Command","\"$((Get-ChildItem *.sln).ToString())\""
      ]
    },
    {
      "label": "Clone VisualStudioCode-WorkSpace-Config",
      "type": "shell",
      "options": {"cwd": "${fileDirname}"},
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","Clone VisualStudioCode-WorkSpace-Config",";",
        "Write-Host","  Time:","$(Get-Date","-Format","'yyyy/MM/dd(K)HH:mm:ss.ffff')",";",
        "Write-Host","  SourceFolder: ${workspaceFolder}",";",
        "Write-Host","  TargetFolder: ${fileDirname}",";",
        "Write-Host","",";",
        "'# Create this file and run at '","|","Out-File","-FilePath","\"${fileDirname}\\VisualStudioCode-WorkSpace-Config-Cloner.ps1\"","-NoNewline",";",
        "\"$(Get-Date","-Format","'yyyy/MM/dd(K)HH:mm:ss.ffff')\"","|","Out-File","-FilePath","\"${fileDirname}\\VisualStudioCode-WorkSpace-Config-Cloner.ps1\"","-Append",";",
        "Copy-Item -Path \\\"${workspaceFolder}\\.vscode\\\" -Destination \\\"${fileDirname}\\\" -Recurse ; ",
        "|","Out-File","-FilePath","\"${fileDirname}\\VisualStudioCode-WorkSpace-Config-Cloner.ps1\"","-Append",";",
        "Move-Item -Path \\\"${fileDirname}\\.vscode\\*.code-workspace\\\" -Destination \\\"${fileDirname}\\.vscode\\$(($Project=\\\"${fileDirname}\\\").Split(\\\"\\\\\\\")[-1]).code-workspace\\\" ;",
        "|","Out-File","-FilePath","\"${fileDirname}\\VisualStudioCode-WorkSpace-Config-Cloner.ps1\"","-Append",";",
        "Get-Content","\"${fileDirname}\\VisualStudioCode-WorkSpace-Config-Cloner.ps1\"",";",
        "\"${fileDirname}\\VisualStudioCode-WorkSpace-Config-Cloner.ps1\"",";"
      ]
    },
    {
      "label": "File: save as base64",
      "type": "shell",
      "options": {"cwd": "${fileDirname}"},
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","File: save as base64",";",
        "Write-Host","  Time:","$(Get-Date","-Format","'yyyy/MM/dd(K)HH:mm:ss.ffff')",";",
        "Write-Host","  File: ${file}",";",
        "Write-Host","",";",
        "[System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($(Get-Content","\"${file}\")))","|","Set-content","\"${file}.$(Get-Date","-Format","\"","${input:TimeFormat}","\").b64\""
      ]
    },
    {
      "label": "File: view with encoding",
      "type": "shell",
      "options": {"cwd": "${fileDirname}"},
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","File: view with encoding",";",
        "Write-Host","  Time:","$(Get-Date","-Format","'yyyy/MM/dd(K)HH:mm:ss.ffff')",";",
        "Write-Host","  File: ${file}",";",
        "Write-Host","  TargetEncoding: ${input:TargetEncoding}",";",
        "Write-Host","",";",
        "Get-Content","-Encoding","${input:TargetEncoding}","\"${file}\""
      ]
    },
    {
      "label": "File: save with encoding",
      "type": "shell",
      "options": {"cwd": "${fileDirname}"},
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","File: save with encoding",";",
        "Write-Host","  Time:","$(Get-Date","-Format","'yyyy/MM/dd(K)HH:mm:ss.ffff')",";",
        "Write-Host","  File: ${file}",";",
        "Write-Host","  SourceEncoding: ${input:SourceEncoding}",";",
        "Write-Host","  TargetEncoding: ${input:TargetEncoding}",";",
        "Write-Host","",";",
        "Get-Content","-Encoding","${input:SourceEncoding}","\"${file}\"","|","Set-Content","-Encoding","${input:SourceEncoding}","\"${file}.${input:SourceEncoding}\"",";",
        "Get-Content","-Encoding","${input:SourceEncoding}","\"${file}.${input:SourceEncoding}\"","|","Set-Content","-Encoding","${input:TargetEncoding}","\"${file}\"",";",
        "Remove-Item","\".\\${file}.${input:SourceEncoding}\""
      ]
    },
    {
      "label": "File: save Version (Time, Version, Status)",
      "type": "shell",
      "options": {"cwd": "${fileDirname}"},
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","File: save Version (Time, Version, Status)",";",
        "Write-Host","  Time:","$(Get-Date","-Format","'yyyy/MM/dd(K)HH:mm:ss.ffff')",";",
        "Write-Host","  File: ${file}",";",
        "Write-Host","  Version: ${input:VersionNumber}",";",
        "Write-Host","  Status: ${input:Status}",";",
        "Write-Host","  Split: ${input:Split}",";",
        "Write-Host","",";",
        "Get-Content","\"${file}\"","|","Set-Content","\".\\${fileBasenameNoExtension}${input:Split}$(Get-Date","-Format","\"","${input:TimeFormat}","\")${input:Split}${input:VersionNumber}${input:Split}${input:Status}${fileExtname}\"",";"
      ]
    },
    {
      "label": "File: save Version (Time, Version)",
      "type": "shell",
      "options": {"cwd": "${fileDirname}"},
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","File: save Version (Time, Version)",";",
        "Write-Host","  Time:","$(Get-Date","-Format","'yyyy/MM/dd(K)HH:mm:ss.ffff')",";",
        "Write-Host","  File: ${file}",";",
        "Write-Host","  Version: ${input:VersionNumber}",";",
        "Write-Host","  Split: ${input:Split}",";",
        "Write-Host","",";",
        "Write-Host","\".\\${fileBasenameNoExtension}${input:Split}$(Get-Date","-Format","\"","${input:TimeFormat}","\")${input:Split}${input:VersionNumber}${fileExtname}\"",";",
        "Get-Content","\"${file}\"","|","Set-Content","\".\\${fileBasenameNoExtension}${input:Split}$(Get-Date","-Format","\"","${input:TimeFormat}","\")${input:Split}${input:VersionNumber}${fileExtname}\"",";"
      ]
    },
    {
      "label": "File.Editor: Indentation to Spaces",
      "type": "shell",
      "options": {"cwd": "${fileDirname}"},
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","File.Editor: Indentation to Spaces",";",
        "Write-Host","  Time:","$(Get-Date","-Format","'yyyy/MM/dd(K)HH:mm:ss.ffff')",";",
        "Write-Host","  File: ${file}",";",
        "Write-Host","  Action: ${input:EditorActionIndentationToSpaces}",";",
        "Write-Host","",";"
      ]
    },
    {
      "label": "File.Editor: Indent Using Spaces",
      "type": "shell",
      "options": {"cwd": "${fileDirname}"},
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","File.Editor: Indent Using Spaces",";",
        "Write-Host","  Time:","$(Get-Date","-Format","'yyyy/MM/dd(K)HH:mm:ss.ffff')",";",
        "Write-Host","  File: ${file}",";",
        "Write-Host","  Action: ${input:EditorActionIndentUsingSpaces}",";",
        "Write-Host","",";"
      ]
    },
    {
      "label": "File.Editor: Format Document",
      "type": "shell",
      "options": {"cwd": "${fileDirname}"},
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","File.Editor: Format Document",";",
        "Write-Host","  Time:","$(Get-Date","-Format","'yyyy/MM/dd(K)HH:mm:ss.ffff')",";",
        "Write-Host","  File: ${file}",";",
        "Write-Host","  Action: ${input:EditorActionFormatDocument}",";",
        "Write-Host","",";"
      ]
    },
    {
      "label": "File.Editor: Format Document with Indent-Spaces",
      "type": "shell",
      "options": {"cwd": "${fileDirname}"},
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","File.Editor: Format Document with Indent-Spaces",";",
        "Write-Host","  Time:","$(Get-Date","-Format","'yyyy/MM/dd(K)HH:mm:ss.ffff')",";",
        "Write-Host","  File: ${file}",";",
        "Write-Host","  Action: ${input:EditorActionIndentationToSpaces}, ${input:EditorActionIndentUsingSpaces}, ${input:EditorActionFormatDocument}",";",
        "Write-Host","",";"
      ]
    },
    {
      "label": "Expand C++ With GNU-G++",
      "type": "shell",
      "dependsOn": [""],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": ["$gcc"],
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "&","D:\\Studio\\Programming\\Project\\Script\\Task\\Task-Infomation.ps1","Expand C++ With GNU-G++",";",
        "&","D:\\Studio\\Programming\\Project\\Script\\Task\\GNU-G++.ps1","Preprocess","'${fileBasenameNoExtension}'","${fileDirname}",";"
      ]
    },
    {
      "label": "Compile C++ With GNU-G++",
      "type": "shell",
      "dependsOn": [""],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": ["$gcc"],
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "&","D:\\Studio\\Programming\\Project\\Script\\Task\\Task-Infomation.ps1","Compile C++ With GNU-G++",";",
        "&","D:\\Studio\\Programming\\Project\\Script\\Task\\GNU-G++.ps1","Compile","'${fileBasenameNoExtension}'","${fileDirname}",";"
      ]
    },
    {
      "label": "Test C++ With GNU-G++",
      "type": "shell",
      "dependsOn": [""],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": ["$gcc"],
      "group": "test",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "&","D:\\Studio\\Programming\\Project\\Script\\Task\\Task-Infomation.ps1","Compile C++ With GNU-G++",";",
        "&","D:\\Studio\\Programming\\Project\\Script\\Task\\GNU-G++.ps1","Test","'${fileBasenameNoExtension}'","${fileDirname}",";"
      ]
    },
    {
      "label": "Test C++ With GNU-G++ (Flush)",
      "type": "shell",
      "dependsOn": [""],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": ["$gcc"],
      "group": "test",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "&","D:\\Studio\\Programming\\Project\\Script\\Task\\Task-Infomation.ps1","Compile C++ With GNU-G++",";",
        "&","D:\\Studio\\Programming\\Project\\Script\\Task\\GNU-G++.ps1","Test-Flush","'${fileBasenameNoExtension}'","${fileDirname}",";"
      ]
    },
    {
      "label": "C++: Build CurrentFile",
      "type": "shell",
      "dependsOn": [""],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": ["$gcc"],
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","C++: Build CurrentFile",";",
        "Write-Host","  Time:","$(Get-Date","-Format","'yyyy/MM/dd(K)HH:mm:ss.ffff')",";",
        "Write-Host","  File: ${file}",";",
        "if","(","Test-Path","\".\\${fileBasenameNoExtension}.Compile.Options.txt\"",")","{","Write-Host","  Compile.Options:","$(Get-Content","'.\\${fileBasenameNoExtension}.Compile.Options.txt')","}",";",
        "Write-Host","  Compile:","'${config:C_Cpp_Config.cppCompilerPath}'","\".\\$(('${file}').Split('\\')[-1])\"","'-o'","\".\\${fileBasenameNoExtension}.exe\"","-NoNewline",";",
        "if","(","Test-Path","\".\\${fileBasenameNoExtension}.Compile.Options.txt\"",")","{","Write-Host","$(Get-Content","\".\\${fileBasenameNoExtension}.Compile.Options.txt\")","}",";",
        "Write-Host","",";",
        "if","(","Test-Path","\".\\${fileBasenameNoExtension}.exe\"",")","{","Write-Host","Remove-Item: \"${fileDirname}\\${fileBasenameNoExtension}.exe\"",";","Remove-Item","\"${fileDirname}\\${fileBasenameNoExtension}.exe\"",";","Write-Host","",";","}",";",
        "# Create this file and run at ","|","Out-File","-FilePath",".\\${fileBasenameNoExtension}.Compile.ps1","-NoNewline",";",
        "\"$(Get-Date","-Format","'yyyy/MM/dd(K)HH:mm:ss.ffff')\"","|","Out-File","-FilePath",".\\${fileBasenameNoExtension}.Compile.ps1","-Append",";",
        "${config:C_Cpp_Config.cppCompilerPath} ","+","\"\\\".\\$(('${file}').Split('\\')[-1])\\\"\"","+"," -o ","+","'.\\${fileBasenameNoExtension}.exe'\"","|","Out-File","-FilePath",".\\${fileBasenameNoExtension}.Compile.ps1","-Append","-NoNewline",";",
        "if","(","Test-Path","\".\\${fileBasenameNoExtension}.Compile.Options.txt\"",")","{","$(Get-Content(\\\".\\${fileBasenameNoExtension}.Compile.Options.txt\\\"))","|","Out-File","-FilePath",".\\${fileBasenameNoExtension}.Compile.ps1","-Append","-NoNewline",";","}",";",
        "Copy-Item","-Path",".\\${fileBasenameNoExtension}.Compile.ps1","-Destination",".\\${fileBasenameNoExtension}.Build.ps1",";",
        "if","(","Test-Path","\".\\${fileBasenameNoExtension}.Build.ps1\"",")","{","Write-Host","Execute-Script: \"${fileDirname}\\${fileBasenameNoExtension}.Build.ps1\"",";","Get-Content('.\\${fileBasenameNoExtension}.Build.ps1')",";","Write-Host","",";",".\\${fileBasenameNoExtension}.Build.ps1",";","}",";"
      ]
    },
    {
      "label": "C++: Execute CurrentFile",
      "type": "shell",
      "dependsOn": ["C++: Build CurrentFile"],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": ["$gcc"],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","C++: Execute CurrentFile",";",
        "Write-Host","  Time:","$(Get-Date","-Format","'yyyy/MM/dd(K)HH:mm:ss.ffff')",";",
        "Write-Host","  File: ${file}",";",
        "if","(","Test-Path","\".\\${fileBasenameNoExtension}.exe\"",")","{","Write-Host","  Execute.File: \"${fileDirname}\\${fileBasenameNoExtension}.Execute.ps1\"",";","}",
        "else","{","Write-Host","  Error: Execute.File is not exist.",";","exit",";","}",";",
        "if","(","Test-Path","\".\\${fileBasenameNoExtension}.Execute.Parameters.txt\"",")","{","Write-Host","  Execute.Parameters:","$(Get-Content","\".\\${fileBasenameNoExtension}.Execute.Parameters.txt\")","}",";",
        "Write-Host","  Execute:","'.\\${fileBasenameNoExtension}.exe'","-NoNewline",";",
        "if","(","Test-Path","\".\\${fileBasenameNoExtension}.Execute.Parameters.txt\"",")","{","Write-Host","$(Get-Content","\".\\${fileBasenameNoExtension}.Execute.Parameters.txt\")","}",";",
        "Write-Host","",";",
        "# Create this file and run at ","|","Out-File","-FilePath","'.\\${fileBasenameNoExtension}.Execute.ps1'","-NoNewline",";",
        "$(Get-Date","-Format","'yyyy/MM/dd(K)HH:mm:ss.ffff')","|","Out-File","-FilePath","'.\\${fileBasenameNoExtension}.Execute.ps1'","-Append",";",
        "if","(","Test-Path","\".\\${fileBasenameNoExtension}.Execute.Input.txt\"",")","{","\\\"Get-Content('.\\${fileBasenameNoExtension}.Execute.Input.txt')\\\"","+"," | ","|","Out-File","-FilePath","'.\\${fileBasenameNoExtension}.Execute.ps1'","-Append","-NoNewline",";","}",";",
        "'.\\${fileBasenameNoExtension}.exe'","|","Out-File","-FilePath",".\\${fileBasenameNoExtension}.Execute.ps1","-Append","-NoNewline",";",
        "if","(","Test-Path","\".\\${fileBasenameNoExtension}.Execute.Parameters.txt\"",")","{","$(Get-Content(\\\".\\${fileBasenameNoExtension}.Execute.Parameters.txt\\\"))","|","Out-File","-FilePath","'.\\${fileBasenameNoExtension}.Execute.ps1'","-Append","-NoNewline",";","}",";",
        "if","(","Test-Path","\".\\${fileBasenameNoExtension}.Execute.ps1\"",")","{","Write-Host","Execute-Script: \"${fileDirname}\\${fileBasenameNoExtension}.Execute.ps1\"",";","Get-Content('.\\${fileBasenameNoExtension}.Execute.ps1')",";","Write-Host","",";",".\\${fileBasenameNoExtension}.Execute.ps1",";","}",";"
      ]
    },
    {
      "label": "Build Cpp (.cpp to .exe)",
      "type": "shell",
      "dependsOn": [""],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": ["$gcc"],
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "g++","${file}","-o",".\\${fileBasenameNoExtension}.exe","-g","-Wall","-std=c++17"
      ]
    },
    {
      "label": "Build Cpp (main.cpp to main.exe)",
      "type": "shell",
      "dependsOn": [""],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": ["$gcc"],
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "g++","${fileDirname}\\main.cpp","-o",".\\main.exe","-g","-Wall","-std=c++17"
      ]
    },
    {
      "label": "Build Cpp (.cpp to .exe) (staticLib)",
      "type": "shell",
      "dependsOn": [""],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": ["$gcc"],
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "g++",".\\${fileBasename}","-o",".\\${fileBasenameNoExtension}.exe","-g","-Wall","-std=c++17","-static-libgcc","-static-libstdc++"
      ]
    },
    {
      "label": "Test Cpp",
      "type": "shell",
      "dependsOn": ["Build Cpp (.cpp to .exe)"],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": ["$gcc"],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "\".\\${fileBasenameNoExtension}.exe\"",";",
        "Remove-Item","\".\\${fileBasenameNoExtension}.exe\""
      ]
    },
    {
      "label": "Test Cpp 0",
      "type": "shell",
      "dependsOn": [],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": ["$gcc"],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "${config:C_Cpp_Config.cppCompilerPath}","${file}","-o",".\\${fileBasenameNoExtension}.exe","-g","-Wall","-std=c++17",";",
        "\".\\${fileBasenameNoExtension}.exe\"",";",
        "Remove-Item","\".\\${fileBasenameNoExtension}.exe\""
      ]
    },
    {
      "label": "Test Cpp main",
      "type": "shell",
      "dependsOn": ["Build Cpp (main.cpp to main.exe)"],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": ["$gcc"],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "\".\\main.exe\"",";",
        "Remove-Item","\".\\main.exe\""
      ]
    },
    {
      "label": "Test Cpp main with file",
      "type": "shell",
      "dependsOn": ["Build Cpp (main.cpp to main.exe)"],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": ["$gcc"],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Get-Content","\".\\\\input1.txt\"","|",".\\main.exe",";",
        "Remove-Item","\".\\main.exe\""
      ]
    },
    {
      "label": "Test Cpp with file",
      "type": "shell",
      "dependsOn": ["Build Cpp (.cpp to .exe)"],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": ["$gcc"],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Get-Content","\".\\\\${fileBasenameNoExtension}.input\"","|","\".\\${fileBasenameNoExtension}.exe\"",";",
        "Remove-Item","\"${fileDirname}\\${fileBasenameNoExtension}.exe\""
      ]
    },
    {
      "label": "Test Cpp with file to file",
      "type": "shell",
      "dependsOn": ["Build Cpp (.cpp to .exe)"],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": ["$gcc"],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Get-Content","\".\\\\${fileBasenameNoExtension}.input\"","|","\".\\${fileBasenameNoExtension}.exe\"",">","\".\\\\${fileBasenameNoExtension}.output\"",";",
        "Remove-Item","\"${fileDirname}\\${fileBasenameNoExtension}.exe\""
      ]
    },
    {
      "label": "Build Java",
      "type": "shell",
      "dependsOn": [""],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": [],
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "javac","${file}"
      ]
    },
    {
      "label": "Test Java",
      "type": "shell",
      "dependsOn": ["Build Java"],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": [],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "java","${fileBasenameNoExtension}",";","Remove-Item","${fileBasenameNoExtension}*.class"
      ]
    },
    {
      "label": "Build Python",
      "type": "shell",
      "dependsOn": [""],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": [],
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "pyinstaller",".\\${fileBasename}","-F",";",
        "if","(","Test-Path",".\\${fileBasenameNoExtension}.exe",")","{","Remove-Item",".\\${fileBasenameNoExtension}.exe","}",";",
        "Move-Item",".\\dist\\${fileBasenameNoExtension}.exe",".\\${fileBasenameNoExtension}.exe",";",
        "Remove-Item",".\\build","-Recurse",";",
        "Remove-Item",".\\dist","-Recurse",";",
        "Remove-Item",".\\${fileBasenameNoExtension}.spec"
      ]
    },
    {
      "label": "Test Python",
      "type": "shell",
      "dependsOn": [""],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": [],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "python",".\\${fileBasename}"
      ]
    },
    {
      "label": "Build JavaScript (notSupported)",
      "type": "shell",
      "dependsOn": [""],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": ["$jshint"],
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "node",".\\${fileBasename}"
      ]
    },
    {
      "label": "Test JavaScript",
      "type": "shell",
      "dependsOn": [""],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": ["$jshint"],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "node",".\\${fileBasename}"
      ]
    },
    {
      "label": "Build TypeScript (.ts to .js)",
      "type": "shell",
      "dependsOn": [""],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": ["$tsc"],
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "tsc","${file}",";",
        "tsc","${file}","--sourcemap"
      ]
    },
    {
      "label": "Test TypeScript",
      "type": "shell",
      "problemMatcher": ["$tsc"],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "ts-node",
      "args": [
        "${file}"
      ]
    },
    {
      "label": "Build Powershell (notSupported)",
      "type": "shell",
      "dependsOn": [""],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": [],
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        ".\\${fileBasename}"
      ]
    },
    {
      "label": "Test Powershell",
      "type": "shell",
      "dependsOn": [""],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": [],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        ".\\${fileBasename}"
      ]
    },
    {
      "label": "Build MASM_x86 (.asm to .lst, .obj, .exe)",
      "type": "shell",
      "dependsOn": [""],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": [],
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "C:\\masm32\\bin\\ml.exe","-c","-coff","-Fl","-nologo","-I'C:\\masm32\\include'","-I'C:\\Irvine\\'",".\\${fileBasenameNoExtension}.asm",";",
        "C:\\masm32\\bin\\link.exe","-out:'.\\${fileBasenameNoExtension}.exe'","-nologo","-verbose","-subsystem:console","-libpath:'C:\\masm32\\lib'","-libpath:'C:\\Irvine'",".\\${fileBasenameNoExtension}.obj",";"
      ]
    },
    {
      "label": "Build MASM_x86 (.asm to .exe)",
      "type": "shell",
      "dependsOn": ["Build MASM_x86 (.asm to .lst, .obj, .exe)"],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": [],
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Remove-Item",".\\${fileBasenameNoExtension}.lst",";",
        "Remove-Item",".\\${fileBasenameNoExtension}.obj",";"
      ]
    },
    {
      "label": "Test MASM_x86",
      "type": "shell",
      "dependsOn": ["Build MASM_x86 (.asm to .lst, .obj, .exe)"],
      "dependsOrder": "sequence",
      "options": {"cwd": "${fileDirname}"},
      "problemMatcher": [],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        ".\\${fileBasenameNoExtension}.exe",";",
        "Remove-Item",".\\${fileBasenameNoExtension}.lst",";",
        "Remove-Item",".\\${fileBasenameNoExtension}.obj",";",
        "Remove-Item",".\\${fileBasenameNoExtension}.exe",";"
      ]
    },
    {
      "label": "npm install",
      //  "detail": "npm install",
      "type": "shell",
      "runOptions": {"instanceLimit": 4},
      "options": {"cwd": "${fileDirname}"},
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","Floder: ${fileDirname}\nCommand: ${input:NodejsPackageManager} install",";",
        "${input:NodejsPackageManager}","install"
      ]
    },
    {
      "label": "npm add module",
      //  "detail": "npm add ${module}",
      "type": "shell",
      "runOptions": {"instanceLimit": 4},
      "options": {"cwd": "${fileDirname}"},
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","Floder: ${fileDirname}\nCommand: ${input:NodejsPackageManager} add ${input:NodejsModuleName}",";",
        "${input:NodejsPackageManager}","add","${input:NodejsModuleName}"
      ]
    },
    {
      "label": "npm update module",
      //  "detail": "npm update ${module}",
      "type": "shell",
      "runOptions": {"instanceLimit": 4},
      "options": {"cwd": "${fileDirname}"},
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","Floder: ${fileDirname}\nCommand: ${input:NodejsPackageManager} update ${input:NodejsModuleName}",";",
        "${input:NodejsPackageManager}","update","${input:NodejsModuleName}"
      ]
    },
    {
      "label": "npm run script",
      //  "detail": "npm run ${script}",
      "type": "shell",
      "runOptions": {"instanceLimit": 4},
      "options": {"cwd": "${fileDirname}"},
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","Floder: ${fileDirname}\nCommand: ${input:NodejsPackageManager} run ${input:NodejsPackageManagerScript}",";",
        "${input:NodejsPackageManager}","run","${input:NodejsPackageManagerScript}"
      ]
    },
    {
      "label": "npm run build",
      //  "detail": "npm run build",
      "type": "shell",
      "runOptions": {"instanceLimit": 4},
      "options": {"cwd": "${fileDirname}"},
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","Floder: ${fileDirname}\nCommand: ${input:NodejsPackageManager} run build",";",
        "${input:NodejsPackageManager}","run","build"
      ]
    },
    {
      "label": "npm run start",
      //  "detail": "npm run start",
      "type": "shell",
      "runOptions": {"instanceLimit": 4},
      "options": {"cwd": "${fileDirname}"},
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","Floder: ${fileDirname}\nCommand: ${input:NodejsPackageManager} run start",";",
        "${input:NodejsPackageManager}","run","start"
      ]
    },
    {
      "label": "npm run dev",
      //  "detail": "npm run dev",
      "type": "shell",
      "runOptions": {"instanceLimit": 4},
      "options": {"cwd": "${fileDirname}"},
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","Floder: ${fileDirname}\nCommand: ${input:NodejsPackageManager} run dev",";",
        "${input:NodejsPackageManager}","run","dev"
      ]
    },
    {
      "label": "npm run vite",
      //  "detail": "vite",
      "type": "shell",
      "runOptions": {"instanceLimit": 4},
      "options": {"cwd": "${fileDirname}"},
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","Floder: ${fileDirname}\nCommand: ${input:NodejsPackageManager} run vite",";",
        "${input:NodejsPackageManager}","run","vite"
      ]
    },
    {
      "label": "npm run vite-host",
      //  "detail": "vite --host",
      "type": "shell",
      "runOptions": {"instanceLimit": 4},
      "options": {"cwd": "${fileDirname}"},
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","Floder: ${fileDirname}\nCommand: ${input:NodejsPackageManager} run vite-host",";",
        "${input:NodejsPackageManager}","run","vite-host"
      ]
    },
    {
      "label": "npm run vite-build",
      //  "detail": "vite build",
      "type": "shell",
      "runOptions": {"instanceLimit": 4},
      "options": {"cwd": "${fileDirname}"},
      "group": "build",
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","Floder: ${fileDirname}\nCommand: ${input:NodejsPackageManager} run vite-build",";",
        "${input:NodejsPackageManager}","run","vite-build"
      ]
    },
    {
      "label": "npm run vite-preview",
      //  "detail": "vite preview",
      "type": "shell",
      "runOptions": {"instanceLimit": 4},
      "options": {"cwd": "${fileDirname}"},
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "group": "Task",
        "panel": "shared",
        "reveal": "always",
        "revealProblems": "onProblem",
        "echo": true,
        "focus": true,
        "clear": false,
        "showReuseMessage": true
      },
      "command": "",
      "args": [
        "Write-Host","Floder: ${fileDirname}\nCommand: ${input:NodejsPackageManager} run vite-preview",";",
        "${input:NodejsPackageManager}","run","vite-preview"
      ]
    }
  ]
}